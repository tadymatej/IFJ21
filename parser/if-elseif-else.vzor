$1 <prog> => require
---------------------------
$2 <prog> => function id_f ( <params_list> <return_fc>
---------------------------
$6 <params_list> => )
---------------------------
$23 <return_fc> => <function_body>
---------------------------
$41 <function_body> => local id : <type> <assignment>
---------------------------
$19 <type> => integer
---------------------------
$58 <assignment> => <function_body>
---------------------------
$45 <function_body> => <if>
---------------------------
$63 <if> => if <exp_cond> then <function_body> <elseif>
---------------------------
$68 <exp_cond> => call PSA
---------------------------
$42 <function_body> => <function_call> <function_body>
---------------------------
$33 <function_call> => id_f ( <args_list>
---------------------------
$34 <args_list> => )
---------------------------
$64 <elseif> => elseif <exp_cond> then <function_body> <elseif>
---------------------------
$68 <exp_cond> => call PSA
---------------------------
$42 <function_body> => <function_call> <function_body>
---------------------------
$33 <function_call> => id_f ( <args_list>
---------------------------
$34 <args_list> => )
---------------------------
$65 <elseif> => else <function_body> <end>
---------------------------
$42 <function_body> => <function_call> <function_body>
---------------------------
$33 <function_call> => id_f ( <args_list>
---------------------------
$34 <args_list> => )
---------------------------
$39 <function_body> => end <prog>
---------------------------
$66 <elseif> => <end>
---------------------------
$67 <end> => end <function_body>
---------------------------
$39 <function_body> => end <prog>
---------------------------
$5 <prog> => <function_call>
---------------------------
$33 <function_call> => id_f ( <args_list>
---------------------------
$34 <args_list> => )
---------------------------
$4 <prog> => EOF
---------------------------
RESULT: 1
syntax OK: 1
